// <auto-generated />
using System;
using CoreDAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreDAL.Migrations
{
    [DbContext(typeof(ABKCOnlineContext))]
    [Migration("20190210024257_JrHandlerRegistration")]
    partial class JrHandlerRegistration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreDAL.Models.Breeds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Breed")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Breed")
                        .IsUnique()
                        .HasName("Breed")
                        .HasFilter("[Breed] IS NOT NULL");

                    b.HasIndex("Id")
                        .HasName("id");

                    b.ToTable("Breeds");
                });

            modelBuilder.Entity("CoreDAL.Models.ClassTemplates", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClassId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChampPoints");

                    b.Property<bool>("ChampWin");

                    b.Property<string>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Gender")
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<int>("Points");

                    b.Property<int>("SortOrder");

                    b.Property<int>("StyleId");

                    b.HasKey("ClassId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ClassId")
                        .HasName("ClassId");

                    b.ToTable("ClassTemplates");
                });

            modelBuilder.Entity("CoreDAL.Models.Clubs", b =>
                {
                    b.Property<int>("ClubId");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Address3")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("ClubName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DuesPaid")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("GoodStanding");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("International");

                    b.Property<int?>("MemberCount");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PresContact")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("President")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("VicePresident")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Vpcontact")
                        .HasColumnName("VPContact")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("WebAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ClubId");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("CoreDAL.Models.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Color")
                        .IsUnique()
                        .HasName("Color")
                        .HasFilter("[Color] IS NOT NULL");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("CoreDAL.Models.Defaults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AbkcshowFee")
                        .HasColumnName("ABKCShowFee");

                    b.Property<string>("CurVersion")
                        .HasMaxLength(12);

                    b.Property<bool>("IsLocked");

                    b.Property<int?>("LastAbkcno")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LastABKCNo")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastBullyId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastClassId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastClubId");

                    b.Property<int?>("LastJrHandlerId");

                    b.Property<int?>("LastLitterId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("LastShowId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MergeDataPath")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<int?>("NonAbkcshowFee")
                        .HasColumnName("NonABKCShowFee");

                    b.Property<string>("PedCustomPaperSize")
                        .HasColumnName("Ped_CustomPaperSize")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PuppyRegCustomPaperSize")
                        .HasColumnName("PuppyReg_CustomPaperSize")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("RegFee")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReportsPath")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .HasName("id");

                    b.HasIndex("LastClassId")
                        .HasName("LastClassId");

                    b.HasIndex("LastShowId")
                        .HasName("LasstShowId");

                    b.ToTable("Defaults");
                });

            modelBuilder.Entity("CoreDAL.Models.Dogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbkcNo")
                        .HasColumnName("ABKC_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("AdbaNo")
                        .HasColumnName("ADBA_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("AkcNo")
                        .HasColumnName("AKC_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<bool?>("Bb")
                        .HasColumnName("BB");

                    b.Property<string>("Bdna")
                        .HasColumnName("BDNA")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Breed")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("BreedingDamCoOwnerId");

                    b.Property<int?>("BreedingDamOwnerId");

                    b.Property<int?>("BreedingSireCoOwnerId");

                    b.Property<int?>("BreedingSireOwnerId");

                    b.Property<int>("BullyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Bully_Id")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ChampPoints")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("ChampWins")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("ChcertPrinted")
                        .HasColumnName("CHCertPrinted");

                    b.Property<string>("ChipNo")
                        .HasColumnName("Chip_No")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int?>("CoOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CoOwner_Id")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Color")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("DamNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Dam_No")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnName("Date_Created")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateRegistered")
                        .HasColumnName("Date_Registered")
                        .HasColumnType("datetime");

                    b.Property<string>("Degrees")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("DogName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("FirstGeneration")
                        .HasColumnName("First_Generation");

                    b.Property<string>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<bool?>("Inw")
                        .HasColumnName("INW");

                    b.Property<int?>("Judges");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<int?>("LitterNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Litter_No")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Majors")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("N");

                    b.Property<bool?>("NeedsNewChcert")
                        .HasColumnName("NeedsNewCHCert");

                    b.Property<bool?>("NeedsNewWpchcert")
                        .HasColumnName("NeedsNewWPCHCert");

                    b.Property<bool?>("Nw")
                        .HasColumnName("NW");

                    b.Property<string>("OrigTitle")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("OtherNo")
                        .HasColumnName("Other_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Owner_Id")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Points")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("Printed");

                    b.Property<int?>("Pups")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("RegAmt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Reg_Amt")
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RegNo")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RegType")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("RegUser")
                        .HasColumnName("Reg_User")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool>("Registered");

                    b.Property<DateTime?>("SabDate")
                        .HasColumnName("SAB_Date")
                        .HasColumnType("datetime");

                    b.Property<bool?>("SaveBully");

                    b.Property<int?>("SireNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Sire_No")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Suffix")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("TatooNo")
                        .HasColumnName("Tatoo_No")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("UkcNo")
                        .HasColumnName("UKC_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<bool>("Verified");

                    b.Property<int?>("WpChampWins")
                        .HasColumnName("WP_ChampWins");

                    b.Property<int?>("WpPoints")
                        .HasColumnName("WP_Points");

                    b.Property<string>("WpTitle")
                        .HasColumnName("WP_Title")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("BullyId")
                        .HasName("NEWID");

                    b.HasIndex("CoOwnerId")
                        .HasName("CoOwnerId");

                    b.HasIndex("DamNo")
                        .HasName("DogsDam_No");

                    b.HasIndex("DogName")
                        .HasName("Name");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OwnerId")
                        .HasName("Owner_Id");

                    b.HasIndex("SireNo")
                        .HasName("DogsSire_No");

                    b.HasIndex("Id", "BullyId", "AbkcNo", "DogName")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("CoreDAL.Models.JrHandlers", b =>
                {
                    b.Property<int>("JrHandlerId");

                    b.Property<string>("Address1")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Address3")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Cell")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ChildFirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ChildLastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ChildName")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dob")
                        .HasColumnName("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("International");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ParentFirstName")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("ParentLastName")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("Points");

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("JrHandlerId");

                    b.ToTable("JrHandlers");
                });

            modelBuilder.Entity("CoreDAL.Models.Judges", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("InActiveDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .HasName("id");

                    b.ToTable("Judges");
                });

            modelBuilder.Entity("CoreDAL.Models.Litters", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Breed")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("BreedingDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CoOwnerId")
                        .HasColumnName("CoOwner_Id");

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DamNo")
                        .HasColumnName("Dam_No");

                    b.Property<int?>("Females")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("LitterId")
                        .HasColumnName("Litter_Id");

                    b.Property<int?>("Males")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OwnerId")
                        .HasColumnName("Owner_id");

                    b.Property<int?>("SireCoOwnerId");

                    b.Property<int>("SireNo")
                        .HasColumnName("Sire_No");

                    b.Property<int?>("SireOwnerId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DamNo")
                        .HasName("Dam_No");

                    b.HasIndex("Id")
                        .HasName("id");

                    b.HasIndex("LitterId")
                        .HasName("Litter_Id");

                    b.HasIndex("OwnerId")
                        .HasName("Owner_id");

                    b.HasIndex("SireNo")
                        .HasName("Sire_No");

                    b.ToTable("Litters");
                });

            modelBuilder.Entity("CoreDAL.Models.ManualUpdateLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbkcNo")
                        .IsRequired()
                        .HasColumnName("ABKC_No")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<int>("BullyId")
                        .HasColumnName("Bully_Id");

                    b.Property<DateTime?>("DateInserted")
                        .HasColumnType("datetime");

                    b.Property<string>("DogName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("DogRecId")
                        .HasColumnName("Dog_RecId");

                    b.Property<string>("InsertedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("NewChampWins");

                    b.Property<int?>("NewPoints");

                    b.Property<int?>("OldChampWins");

                    b.Property<int?>("OldPoints");

                    b.Property<string>("Title")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ManualUpdateLog");
                });

            modelBuilder.Entity("CoreDAL.Models.Owners", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnName("Owner_Id");

                    b.Property<string>("Address1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Address2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Address3")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Cell")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("DualSignature")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Dual_Signature")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .HasColumnName("First_Name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("International");

                    b.Property<string>("LastName")
                        .HasColumnName("Last_Name")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("MiddleInitial")
                        .HasMaxLength(12)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('')")
                        .IsUnicode(false);

                    b.Property<string>("WebPassword")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("OwnerId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("id");

                    b.HasIndex("LastName")
                        .HasName("Last_Name1");

                    b.HasIndex("OwnerId")
                        .HasName("Owner_Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("CoreDAL.Models.ShowParticipant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmbandNumber")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DogId1")
                        .IsRequired();

                    b.Property<int?>("ShowId1")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DogId1");

                    b.HasIndex("ShowId1");

                    b.ToTable("ShowParticipants");
                });

            modelBuilder.Entity("CoreDAL.Models.ShowResults", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArmbandNumber");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("ChampPoints");

                    b.Property<bool>("ChampWin");

                    b.Property<string>("Class")
                        .HasMaxLength(50);

                    b.Property<int?>("ClassTemplateClassId");

                    b.Property<string>("Comments")
                        .HasMaxLength(250);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DogId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("NoComp");

                    b.Property<int>("Points");

                    b.Property<int>("ShowId");

                    b.Property<string>("Style")
                        .HasMaxLength(20);

                    b.Property<int?>("StyleRefId");

                    b.Property<string>("Winning_ABKC")
                        .HasMaxLength(12);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ClassTemplateClassId");

                    b.HasIndex("Id")
                        .HasName("id");

                    b.HasIndex("ShowId");

                    b.HasIndex("StyleRefId");

                    b.ToTable("ShowResults");
                });

            modelBuilder.Entity("CoreDAL.Models.Shows", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Abkchosted")
                        .HasColumnName("ABKCHosted");

                    b.Property<string>("Abkcrep")
                        .HasColumnName("ABKCRep")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<bool?>("AppRecvd");

                    b.Property<bool?>("AuthLetterRecvd");

                    b.Property<string>("BreedsShown")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<bool?>("ClassesClosed");

                    b.Property<int?>("ClubId");

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateApproved")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateLetterRecvd")
                        .HasColumnType("datetime");

                    b.Property<int?>("EntriesAllowed");

                    b.Property<decimal?>("FeePaid")
                        .HasColumnType("decimal(6, 3)");

                    b.Property<DateTime?>("FinalizedDate");

                    b.Property<bool?>("FirstShow");

                    b.Property<DateTime?>("InsuranceExpires")
                        .HasColumnType("datetime");

                    b.Property<string>("InsurancePolicy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("International");

                    b.Property<string>("Judge1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Judge2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("JudgeId");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Paperwork1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Paperwork2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("RingSteward")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ShowDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShowName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("StylesShown")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ShowId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("CoreDAL.Models.Styles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StyleName")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .HasName("id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("CoreDAL.Models.Transfers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Dog_Id")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("NewCoOwnerId")
                        .HasColumnName("New_CoOwner_Id");

                    b.Property<int>("NewOwnerId")
                        .HasColumnName("New_Owner_Id");

                    b.Property<int?>("OldCoOwnerId")
                        .HasColumnName("Old_CoOwner_Id");

                    b.Property<int>("OldOwnerId")
                        .HasColumnName("Old_Owner_Id");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnName("Sale_Date")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("DogId")
                        .HasName("Dog_Id");

                    b.HasIndex("Id")
                        .HasName("id");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("CoreDAL.Models.UserLoginHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("LoggedIn")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LoggedOut")
                        .HasColumnType("datetime");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Version")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("UserLoginHistory");
                });

            modelBuilder.Entity("CoreDAL.Models.Users", b =>
                {
                    b.Property<string>("LoginName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClubsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("DefaultsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("DogsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LittersGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<bool?>("LoggedIn");

                    b.Property<string>("LookupsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("OwnersGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ReportsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ShowResultsGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ShowSetupGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("UsersGroup")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("('X')")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("LoginName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.BaseDogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BreedId");

                    b.Property<int?>("CoOwnerOwnerId");

                    b.Property<byte[]>("CoOwnerSignature");

                    b.Property<int?>("DamId");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("DogName")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<int>("Gender");

                    b.Property<string>("MicrochipNumber");

                    b.Property<int?>("OwnerId");

                    b.Property<byte[]>("OwnerSignature");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("BreedId");

                    b.HasIndex("CoOwnerOwnerId");

                    b.HasIndex("DamId")
                        .IsUnique()
                        .HasFilter("[DamId] IS NOT NULL");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("OwnerId");

                    b.ToTable("ABKC_Dogs");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.DogColorJoinModel", b =>
                {
                    b.Property<int>("DogId");

                    b.Property<int>("ColorId");

                    b.HasKey("DogId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("DogColorTable");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.BaseRegistrationStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.Property<int?>("StatusChangedById");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("StatusChangedById");

                    b.ToTable("RegistrationStatus");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseRegistrationStatusModel");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.JuniorHandlerRegistrationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1");

                    b.Property<string>("Address2");

                    b.Property<string>("Address3");

                    b.Property<string>("Cell");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("International");

                    b.Property<string>("LastName");

                    b.Property<string>("ParentFirstName");

                    b.Property<string>("ParentLastName");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("SubmissionNotes");

                    b.Property<int?>("SubmittedById");

                    b.Property<string>("Zip");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SubmittedById");

                    b.ToTable("JrHandlerRegistrations");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.RegistrationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("BackPedigree");

                    b.Property<byte[]>("CoOwnerSignature");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int?>("DogId")
                        .IsRequired();

                    b.Property<byte[]>("FrontPedigree");

                    b.Property<byte[]>("FrontPhoto");

                    b.Property<bool>("IsInternationalRegistration");

                    b.Property<bool>("OvernightRequested");

                    b.Property<byte[]>("OwnerSignature");

                    b.Property<bool>("RushRequested");

                    b.Property<byte[]>("SidePhoto");

                    b.Property<string>("SubmissionNotes");

                    b.Property<int?>("SubmittedById");

                    b.HasKey("Id");

                    b.HasIndex("DogId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SubmittedById");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("OktaId")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ABKCUsers");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.DogRegistrationStatusModel", b =>
                {
                    b.HasBaseType("CoreDAL.Models.v2.Registrations.BaseRegistrationStatusModel");

                    b.Property<int?>("DogRegistrationId")
                        .IsRequired();

                    b.HasIndex("DogRegistrationId");

                    b.ToTable("DogRegistrationStatusModel");

                    b.HasDiscriminator().HasValue("DogRegistrationStatusModel");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.JuniorHandlerRegistrationStatusModel", b =>
                {
                    b.HasBaseType("CoreDAL.Models.v2.Registrations.BaseRegistrationStatusModel");

                    b.Property<int?>("JrHandlerRegistrationId")
                        .IsRequired();

                    b.HasIndex("JrHandlerRegistrationId");

                    b.ToTable("JuniorHandlerRegistrationStatusModel");

                    b.HasDiscriminator().HasValue("JuniorHandlerRegistrationStatusModel");
                });

            modelBuilder.Entity("CoreDAL.Models.ShowParticipant", b =>
                {
                    b.HasOne("CoreDAL.Models.Dogs", "Dog")
                        .WithMany()
                        .HasForeignKey("DogId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreDAL.Models.Shows", "Show")
                        .WithMany()
                        .HasForeignKey("ShowId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreDAL.Models.ShowResults", b =>
                {
                    b.HasOne("CoreDAL.Models.ClassTemplates", "ClassTemplate")
                        .WithMany()
                        .HasForeignKey("ClassTemplateClassId")
                        .HasConstraintName("ClassTemplateId");

                    b.HasOne("CoreDAL.Models.Shows", "Show")
                        .WithMany()
                        .HasForeignKey("ShowId")
                        .HasConstraintName("ShowId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreDAL.Models.Styles", "StyleRef")
                        .WithMany()
                        .HasForeignKey("StyleRefId")
                        .HasConstraintName("StyleId");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.BaseDogModel", b =>
                {
                    b.HasOne("CoreDAL.Models.Breeds", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId");

                    b.HasOne("CoreDAL.Models.Owners", "CoOwner")
                        .WithMany()
                        .HasForeignKey("CoOwnerOwnerId");

                    b.HasOne("CoreDAL.Models.v2.BaseDogModel", "Dam")
                        .WithOne("Sire")
                        .HasForeignKey("CoreDAL.Models.v2.BaseDogModel", "DamId");

                    b.HasOne("CoreDAL.Models.Owners", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.DogColorJoinModel", b =>
                {
                    b.HasOne("CoreDAL.Models.Colors", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreDAL.Models.v2.BaseDogModel", "Dog")
                        .WithMany("Colors")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.BaseRegistrationStatusModel", b =>
                {
                    b.HasOne("CoreDAL.Models.v2.UserModel", "StatusChangedBy")
                        .WithMany()
                        .HasForeignKey("StatusChangedById");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.JuniorHandlerRegistrationModel", b =>
                {
                    b.HasOne("CoreDAL.Models.v2.UserModel", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.RegistrationModel", b =>
                {
                    b.HasOne("CoreDAL.Models.v2.BaseDogModel", "DogInfo")
                        .WithMany()
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CoreDAL.Models.v2.UserModel", "SubmittedBy")
                        .WithMany()
                        .HasForeignKey("SubmittedById");
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.DogRegistrationStatusModel", b =>
                {
                    b.HasOne("CoreDAL.Models.v2.Registrations.RegistrationModel")
                        .WithMany("StatusHistory")
                        .HasForeignKey("DogRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CoreDAL.Models.v2.Registrations.JuniorHandlerRegistrationStatusModel", b =>
                {
                    b.HasOne("CoreDAL.Models.v2.Registrations.JuniorHandlerRegistrationModel")
                        .WithMany("StatusHistory")
                        .HasForeignKey("JrHandlerRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
